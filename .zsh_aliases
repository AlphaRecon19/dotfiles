export PATH=~/.config/composer/vendor/bin:$PATH
export PATH=~/scripts/bin:$PATH
export PATH=~/bin:$PATH

# Default API keys from the aur
export google_api_key="AIzaSyDwr302FpOSkGRpLlUpPThNTDPbXcIn_FM"
export google_default_client_id="413772536636.apps.googleusercontent.com"
export google_default_client_secret="0ZChLK6AxeA3Isu96MkwqDR4"

alias atom="/usr/bin/atom"
alias ll="ls --color=auto -Flh"
alias gstt="~/bin/git-status"

# Bluetooth headphones
alias blue="echo -e 'connect A0:E9:DB:30:06:E5' | bluetoothctl"

# Generate new SSL in the current dir
alias gen-ssl="openssl req -nodes -newkey rsa:2048 -keyout priv.key -out cert.csr"

# Dump out the headers for a curl request
alias curldump='curl -s -v -o/dev/null '

# Copy a file to the clipboard
alias clipy='xclip -sel clip <'

# Jacksons SSH Servers
alias s-jas='ssh server.jas-group.co.uk'
alias s-jasdb='ssh db.jas-group.co.uk'
alias s-jass='ssh staging.jas-group.co.uk'
alias s-jasc='ssh channel.jas-group.co.uk'

# Jacksons Backup servers
alias s-b-jasdb='ssh backup.db.jas-group.co.uk'
alias s-b-jas='ssh backup.server.jas-group.co.uk'

# Start geary with debug options
alias startmail='geary -d --log-conversations --log-deserializer --log-network --log-replay-queue --log-serializer --log-periodic --log-folder-normalization'

alias ytdownload='youtube-dl --audio-format mp3 -x'

alias dc='docker-compose'

# Run applications with in docker containers
alias phpstan='docker run -v $PWD:/app --rm phpstan/phpstan analyse /app/src --level 7'

yarn () {
    tty=
    tty -s && tty=--tty
    docker run \
        $tty \
        --rm \
        --init \
        -it \
        --entrypoint /usr/local/bin/yarn \
        --volume /tmp:/tmp:rw \
        --volume /home/chris:/home/chris:rw \
        --volume $(pwd):/$(pwd) \
        -w /$(pwd) \
        local/node:latest $@
}

bower () {
    name="${PWD##*/}_bower"
    tty=
    tty -s && tty=--tty
    docker run \
        $tty \
        -it \
        --rm \
        --init \
        --user $(id -u):$(id -g) \
        --memory 256M \
        --name $name \
        --entrypoint /usr/local/bin/bower \
        --volume /tmp:/tmp:rw \
        --volume /home/chris:/home/chris:rw \
        --volume $(pwd):/$(pwd) \
        -w /$(pwd) \
        local/node:latest $@
}

gulp () {
    name="${PWD##*/}_gulp"
    tty=
    tty -s && tty=--tty
    docker run \
        $tty \
        -it \
        --rm \
        --init \
        --user $(id -u):$(id -g) \
        --memory 256M \
        --name $name \
        --entrypoint /usr/local/bin/gulp \
        --volume /tmp:/tmp:rw \
        --volume /home/chris:/home/chris:rw \
        --volume $(pwd):/$(pwd) \
        -w /$(pwd) \
        local/node:latest $@
}

phpcbf () {
   if [ -z "$1" ]; then
     path='src/'
   else
     path=$1
   fi

    name="${PWD##*/}_phpcbf"
    tty=
    tty -s && tty=--tty
    docker run \
        $tty \
        --rm \
        --init \
        --name $name \
        --user $(id -u):$(id -g) \
        --volume /home/chris:/home/chris:ro \
        --volume $(pwd):$(pwd) \
        --workdir $(pwd) \
        local/codesniffer:latest php /opt/phpcbf.phar --standard=PSR2 $(pwd)/$path
}
